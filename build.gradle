buildscript {
    ext.kotlin_version = "1.3.21"
    ext.ktor_version = "1.2.0"
    ext.bioinf_commons_version = "0.0.7"

    repositories {
        maven { url "https://cache-redirector.jetbrains.com/repo1.maven.org/maven2" }
        maven { url "https://cache-redirector.jetbrains.com/jcenter.bintray.com" }

        // In case of issues with cache redirector:
        // jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    maven { url "https://dl.bintray.com/jetbrains-research/maven" }
    jcenter()
}

apply plugin: "kotlin"
apply plugin: "com.github.johnrengelman.shadow"

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility
compileKotlin { kotlinOptions.jvmTarget = sourceCompatibility }
compileTestKotlin { kotlinOptions.jvmTarget = sourceCompatibility }

dependencies {
    // Kotlin dependencies
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-support-jdk8:0.1"
    implementation "org.jetbrains.kotlin:kotlin-reflect"

    // Server: Ktor dependencies
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-jackson:$ktor_version"

    // Logging dependencies
    compile("ch.qos.logback:logback-classic:1.2.3")
    compile("ch.qos.logback:logback-core:1.2.3")
    compile("org.slf4j:slf4j-api:1.7.26")

    //ML dependencies
    compile group: "nz.ac.waikato.cms.weka", name: "weka-stable", version: "3.8.3"

    // Bioinformatics (science) dependencies
    compile "org.jetbrains.bio:bioinf-commons:$bioinf_commons_version"
    compile "org.nield:kotlin-statistics:1.2.1"
    compile group: "org.apache.commons", name: "commons-math3", version: "3.6.1"

    // Testing dependencies
    testCompile "junit:junit:4.12"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

tasks.withType(Test) {
    // Continue execution even if tests for some of the sub-projects failed.
    ignoreFailures = true
    maxParallelForks = Runtime.runtime.availableProcessors()
    maxHeapSize = "1024m"

    testLogging.showStandardStreams = true

    systemProperty "teamcity.build.checkoutDir", System.getProperty("teamcity.build.checkoutDir")
}

test {
    include "**/*Test.class"
}

task sourcesJar(type: Jar) {
    classifier = "sources"
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

shadowJar {
    // File name: "$baseName-$version-$classifier.jar"
    baseName = "fishbone"
    version = "${version}.${project.buildCounter}"
    classifier = ""
    minimize {
        // java.lang.ClassNotFoundException: org.apache.log4j.xml.DOMConfigurator
        exclude(dependency("log4j:log4j:1.2.17"))
        // kotlin.jvm.KotlinReflectionNotSupportedError: Kotlin reflection implementation is not found at runtime. Make sure you have kotlin-reflect.jar in the classpath
        exclude(dependency("org.jetbrains.kotlin:.*"))
        // java.lang.ClassNotFoundException: org.jetbrains.bio.util.LogsLayout
        exclude(dependency("org.jetbrains.bio:bioinf-commons:$bioinf_commons_version"))
        // ch.qos.logback.core.util.DynamicClassLoadingException: Failed to instantiate type ch.qos.logback.core.rolling.RollingFileAppender
        exclude(dependency("org.slf4j:.*"))
        // java.lang.NoClassDefFoundError: com/fasterxml/jackson/dataformat/yaml/YAMLFactory
        exclude(dependency("com.fasterxml.jackson.dataformat:.*"))
        // java.lang.NoClassDefFoundError: org/yaml/snakeyaml/error/YAMLException
        exclude(dependency("org.yaml:.*"))
    }
    manifest {
        attributes "Main-Class": "org.jetbrains.bio.fishbone.FishboneApp"
    }
    zip64 true
}

jar {
    manifest {
        attributes provider: "gradle"
        attributes "Application-Name": "Fishbone $version"
        attributes "Built-By": "JetBrains Research TeamCity"
    }
}

task wrapper(type: Wrapper, overwrite: true) {
    gradleVersion = "5.51"
}
